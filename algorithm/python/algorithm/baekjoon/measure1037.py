# 양수 A가 N의 진짜 약수가 되려면, N이 A의 배수이고, A가 1과 N이 아니어야 한다.
# 어떤 수 N의 진짜 약수가 모두 주어질 때, N을 구하는 프로그램을 작성하시오.
# 첫째 줄에 N의 진짜 약수의 개수가 주어진다. 이 개수는 50보다 작거나 같은 자연수이다.
# 둘째 줄에는 N의 진짜 약수가 주어진다. 1,000,000보다 작거나 같고, 2보다 크거나 같은 자연수이고, 중복되지 않는다.
# 첫째 줄에 N을 출력한다. N은 항상 32비트 부호있는 정수로 표현할 수 있다.

# https://www.acmicpc.net/problem/1037

# 약수중 가장 높은 값은 1이 아닌 가장 작은 약수와 N을 나눈 값이다. MAX = N / MIN
# 양쪽에 MIN을 곱해주면 MAX * MIN = N
# 그러므로 가장 작은 약수와 가장 높은 약수를 곱해주면 답이 나온다.
# 진짜 약수 목록을 모두 주기때문에 풀 수 있는 문제였다.
# 정렬하고 0번과 마지막꺼 더해주면 끝.

n = int(input())
data = list(map(int, input().split()))

# data.sort()
# print(data[0] * data[-1])

print(max(data) * min(data))
