# 수열 A가 주어졌을 때, 가장 긴 증가하는 부분 수열을 구하는 프로그램을 작성하시오.
# 예를 들어, 수열 A = {10, 20, 10, 30, 20, 50} 인 경우에 가장 긴 증가하는 부분 수열은 A = {10, 20, 30, 50} 이고, 길이는 4이다.

# 첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000)이 주어진다.
# 둘째 줄에는 수열 A를 이루고 있는 Ai가 주어진다. (1 ≤ Ai ≤ 1,000)

# 첫째 줄에 수열 A의 가장 긴 증가하는 부분 수열의 길이를 출력한다.

# 10 20 30 50 : 4
# 10 20
n = int(input())
a = list(map(int, input().split()))
# dp엔 최대 길이를 저장. 비교 필요
dp = [0 for _ in range(n)]

# 10 20 10 30 20 50 기준
# 10 : 1
# 20 : 2
# 30 : 3
# 50 : 4
# 배열로는 [1, 2, 1, 3, 2, 4]
# 이 중 최대값 출력하면 끝?
# 나보다 낮은 수의 최댓값 +1 하면 될 거 같다.
for i in range(n):
    for k in range(i):
        # 1. a[i] > a[k] : 값을 대체 가능한 상태.
        # 2. dp[i] < dp[k] : 값을 대체 해야하는 상태. ex) 20의 기본값은 0인데, 이 상태에서 10의 최대값인 1을 계승 받아야 함.
        if a[i] > a[k] and dp[i] < dp[k]:
            dp[i] = dp[k]
    dp[i] += 1;

print(dp)
print(max(dp))
